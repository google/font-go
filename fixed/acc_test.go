// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"image"
	"io/ioutil"
	"testing"
)

func TestAccumulateSIMDUnaligned(t *testing.T) {
	if !haveAccumulateSIMD {
		t.Skip("No accumulateSIMD implemention")
	}

	dst := make([]uint8, 64)
	src := make([]int20_12, 64)

	for d := 0; d < 16; d++ {
		for s := 0; s < 16; s++ {
			accumulateSIMD(dst[d:d+32], src[s:s+32])
		}
	}
}

func TestAccumulateSIMDShortDst(t *testing.T) {
	if !haveAccumulateSIMD {
		t.Skip("No accumulateSIMD implemention")
	}

	dst := make([]uint8, 4)
	src := []int20_12{1 << 10, 1 << 10, 1 << 10, 1 << 10}
	accumulateSIMD(dst[:0], src)
	for i, got := range dst {
		if got != 0 {
			t.Errorf("i=%d: got %#02x, want %#02x", i, got, 0)
		}
	}
}

func TestAccumulate(t *testing.T)              { testAccumulate(t, sequence, sequenceAcc, false) }
func TestAccumulateSIMD(t *testing.T)          { testAccumulate(t, sequence, sequenceAcc, true) }
func TestAccumulateRobotoG16(t *testing.T)     { testAccumulate(t, robotoG16, robotoG16Acc, false) }
func TestAccumulateSIMDRobotoG16(t *testing.T) { testAccumulate(t, robotoG16, robotoG16Acc, true) }

func BenchmarkAccumulate16(b *testing.B)      { benchAccumulate(b, robotoG16, false) }
func BenchmarkAccumulateSIMD16(b *testing.B)  { benchAccumulate(b, robotoG16, true) }
func BenchmarkAccumulate100(b *testing.B)     { benchAccumulate(b, robotoG100, false) }
func BenchmarkAccumulateSIMD100(b *testing.B) { benchAccumulate(b, robotoG100, true) }

func testAccumulate(t *testing.T, src []int20_12, want []byte, simd bool) {
	if simd && !haveAccumulateSIMD {
		t.Skip("No accumulateSIMD implemention")
	}

	for _, n := range []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
		13, 14, 15, 16, 17, 41, 58, 79, 96, len(src)} {

		if n > len(src) {
			continue
		}
		got := make([]byte, n)
		if simd {
			accumulateSIMD(got, src[:n])
		} else {
			accumulate(got, src[:n])
		}

	loop:
		for i := range got {
			g := got[i]
			w := want[i]
			if g != w {
				t.Errorf("n=%d, i=%d: got %#02x, want %#02x", n, i, g, w)
				break loop
			}
		}
	}
}

func benchAccumulate(b *testing.B, src []int20_12, simd bool) {
	if simd && !haveAccumulateSIMD {
		b.Skip("No accumulateSIMD implemention")
	}

	dst := make([]byte, len(src))
	acc := accumulate
	if simd {
		acc = accumulateSIMD
	}

	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		acc(dst, src)
	}
}

func BenchmarkRasterize16(b *testing.B)  { benchRasterize(b, 16) }
func BenchmarkRasterize32(b *testing.B)  { benchRasterize(b, 32) }
func BenchmarkRasterize64(b *testing.B)  { benchRasterize(b, 64) }
func BenchmarkRasterize100(b *testing.B) { benchRasterize(b, 100) }
func BenchmarkRasterize150(b *testing.B) { benchRasterize(b, 150) }
func BenchmarkRasterize200(b *testing.B) { benchRasterize(b, 200) }

func benchRasterize(b *testing.B, ppem float32) {
	fontData, err := ioutil.ReadFile(*fontFlag)
	if err != nil {
		b.Fatal(err)
	}
	f, err := parse(fontData)
	if err != nil {
		b.Fatal(err)
	}

	data := f.glyphData(uint16(*glyphIDFlag))
	dx, dy, transform := data.glyphSizeAndTransform(f.scale(ppem))
	z := newRasterizer(dx, dy)
	dst := image.NewAlpha(z.Bounds())

	acc := accumulate
	if haveAccumulateSIMD {
		acc = accumulateSIMD
	}

	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		z.reset()
		z.rasterize(f, data, transform)
		acc(dst.Pix, z.a)
	}
}

// sequenceAcc is the accumulation of sequence.
var sequenceAcc = []uint8{
	0x20,
	0x60,
	0x20,
	0x40,
	0x60,
	0x60,
	0xa0,
	0xff,
	0xe0,
	0x00,
	0x40,
}

var sequence = []int20_12{
	+0x0200, // +0.125, // Running sum: +0.125
	-0x0800, // -0.500, // Running sum: -0.375
	+0x0400, // +0.250, // Running sum: -0.125
	+0x0600, // +0.375, // Running sum: +0.250
	+0x0200, // +0.125, // Running sum: +0.375
	+0x0000, // +0.000, // Running sum: +0.375
	-0x1000, // -1.000, // Running sum: -0.625
	-0x0800, // -0.500, // Running sum: -1.125
	+0x0400, // +0.250, // Running sum: -0.875
	+0x0e00, // +0.875, // Running sum: +0.000
	+0x0400, // +0.250, // Running sum: +0.250
}

// robotoG16Acc is the accumulation of roboto16.
var robotoG16Acc = []uint8{
	0x00, 0x00, 0x29, 0x7c, 0x87, 0x3e, 0x34, 0x67,
	0x00, 0x3f, 0xf5, 0xdc, 0xaa, 0xe6, 0xd5, 0xe4,
	0x00, 0xd0, 0xcd, 0x08, 0x00, 0x0d, 0xd5, 0xe4,
	0x18, 0xff, 0x60, 0x00, 0x00, 0x00, 0x90, 0xe4,
	0x33, 0xff, 0x3e, 0x00, 0x00, 0x00, 0x90, 0xe4,
	0x2c, 0xff, 0x40, 0x00, 0x00, 0x00, 0x90, 0xe4,
	0x0a, 0xf6, 0x80, 0x00, 0x00, 0x00, 0x9b, 0xe4,
	0x00, 0x94, 0xf3, 0x59, 0x24, 0x6b, 0xfd, 0xe4,
	0x00, 0x06, 0xa7, 0xfb, 0xff, 0xcd, 0xb1, 0xe3,
	0x00, 0x00, 0x00, 0x0a, 0x13, 0x00, 0xa9, 0xc4,
	0x00, 0x7e, 0x84, 0x09, 0x00, 0x3e, 0xf9, 0x76,
	0x00, 0x29, 0xdf, 0xfa, 0xe8, 0xff, 0xa1, 0x04,
	0x00, 0x00, 0x00, 0x27, 0x48, 0x1c, 0x00, 0x00,
}

// robotoG16 is the to-be-accumulated 'g' from Roboto-Regular.ttf at 16 ppem.
var robotoG16 = []int20_12{
	0, 0, -669, -1323, -181, 1181, 151, -812,
	1653, -1016, -2905, 397, 798, -959, 271, -234,
	3638, -3319, 45, 3144, 140, -212, -3205, -231,
	3264, -3712, 2555, 1541, 0, 0, -2304, -1344,
	2823, -3271, 3099, 997, 0, 0, -2304, -1344,
	2944, -3392, 3072, 1024, 0, 0, -2304, -1344,
	3473, -3776, 1901, 2050, 0, 0, -2484, -1164,
	3648, -2381, -1518, 2474, 847, -1134, -2345, 409,
	3648, -108, -2568, -1350, -70, 804, 460, -803,
	3635, 0, 0, -170, -140, 310, -2712, -424,
	3136, -2027, -89, 1963, 153, -992, -2999, 2103,
	1888, -660, -2908, -447, 288, -369, 1520, 2504,
	72, 0, 0, -630, -533, 701, 462, 0,
}

// robotoG100 is the to-be-accumulated 'g' from Roboto-Regular.ttf at 100 ppem.
var robotoG100 = []int20_12{
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -690, -956, -406, -413, -413, -379, 266, 378, 378, 378, 768, 1025, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -576, -1344, -1472, -704, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 285, 1254, 1297, 1205, 98, 0, 0, 0, 0, 0, -3348, -108, 0, 0, 0, 0, 0, 0, 2376,
	1080, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -252, -2331, -1508, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 576, 2432, 1088, 0, 0, 0, -128, -3968, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1344, -2432, -320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1408, 2304, 384, 0, -384, -3712, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, 0, 0, 0, -45, -2663, -1388, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 3050, 744, -640, -3456, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, 0, 0, 0, -2752, -1344, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 3136, -192, -3200, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, 0, 0, -2624, -1472, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 1984, -2240, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, 0, -2330, -1766, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 400, -220, -280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, -5, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, -960, -3136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 318, 1378, 1453, 595, 341, 11, 0, -231, -504, -590, -1438, -1290, -43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, -64, -3392, -640, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 2296, 1576, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, -423, -1692, -1777, -204, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, -1984, -2112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 945, 2634, 517, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -704, -2944, -448, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, -490, -3490, -116, 0, 0, 0, 0, 0, 0, 0, 0, 832, 3136, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -320, -2880, -896, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, -2048, -2048, 0, 0, 0, 0, 0, 0, 0, 0, 601, 3180, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -84, -3271, -741, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, -3584, -512, 0, 0, 0, 0, 0, 0, 0, 0, 3328, 768, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -640, -3328, -128, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, -1024, -3072, 0, 0, 0, 0, 0, 0, 0, 0, 1536, 2560, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1792, -2304, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, -2560, -1536, 0, 0, 0, 0, 0, 0, 0, 174, 3490, 432, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3406, -690, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, -61, -3880, -155, 0, 0, 0, 0, 0, 0, 0, 1536, 2560, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, -768, -3328, 0, 0, 0, 0, 0, 0, 0, 0, 2880, 1216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, -1600, -2496, 0, 0, 0, 0, 0, 0, 0, 192, 3840, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, -2432, -1664, 0, 0, 0, 0, 0, 0, 0, 1360, 2736, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, -3264, -832, 0, 0, 0, 0, 0, 0, 0, 2048, 2048, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, -3960, -136, 0, 0, 0, 0, 0, 0, 0, 2688, 1408, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1152, -3968, 0, 0, 0, 0, 0, 0, 0, 0, 3328, 768, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	960, -3776, 0, 0, 0, 0, 0, 0, 0, 36, 3920, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	768, -3584, 0, 0, 0, 0, 0, 0, 0, 192, 3904, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	576, -3392, 0, 0, 0, 0, 0, 0, 0, 384, 3712, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	384, -3200, 0, 0, 0, 0, 0, 0, 0, 576, 3520, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	100, -2916, 0, 0, 0, 0, 0, 0, 0, 768, 3328, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	256, -3072, 0, 0, 0, 0, 0, 0, 0, 886, 3210, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	448, -3264, 0, 0, 0, 0, 0, 0, 0, 768, 3328, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	640, -3456, 0, 0, 0, 0, 0, 0, 0, 576, 3520, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	832, -3648, 0, 0, 0, 0, 0, 0, 0, 384, 3712, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1024, -3840, 0, 0, 0, 0, 0, 0, 0, 100, 3918, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1248, -3776, -288, 0, 0, 0, 0, 0, 0, 0, 3392, 704, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, -3008, -1088, 0, 0, 0, 0, 0, 0, 0, 2688, 1408, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, -2240, -1856, 0, 0, 0, 0, 0, 0, 0, 1984, 2112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, -1472, -2624, 0, 0, 0, 0, 0, 0, 0, 885, 3211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, -704, -3392, 0, 0, 0, 0, 0, 0, 0, 0, 3520, 576, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, -43, -3843, -210, 0, 0, 0, 0, 0, 0, 0, 2112, 1984, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, -2432, -1664, 0, 0, 0, 0, 0, 0, 0, 544, 3476, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3426, -670, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, -896, -3200, 0, 0, 0, 0, 0, 0, 0, 0, 2304, 1792, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1664, -2432, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, -3456, -640, 0, 0, 0, 0, 0, 0, 0, 256, 3584, 256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -448, -3456, -192, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, -1920, -2176, 0, 0, 0, 0, 0, 0, 0, 0, 1273, 2823, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -24, -2992, -1080, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, -351, -3560, -185, 0, 0, 0, 0, 0, 0, 0, 0, 1664, 2432, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -128, -2688, -1280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, -1856, -2240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1832, 2192, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -384, -2880, -832, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, -64, -3328, -704, 0, 0, 0, 0, 0, 0, 0, 0, 0, 704, 2624, 768, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -123, -1435, -2078, -460, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, -896, -3200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 1074, 1419, 1366, 223, 0, 0, 0, 0, -180, -532, -1460, -1664, -260, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, 0, -2304, -1792, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 323, 411, 399, -304, -498, -323, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, 0, 0, -2624, -1472, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 180, -180, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, 0, 0, -64, -2752, -1280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2432, -1472, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, 0, 0, 0, -98, -2863, -1135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 2688, 1344, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1728, -2240, -128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 525, 2515, 1056, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2816,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -512, -2560, -1024, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 1984, 1856, 64, 0, 0, -3136, -960, 0, 0, 0, 0, 0, 0, 0, 2834,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -18, -1004, -1450, -1392, -232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 798, 1280, 1680, 338, 0, 0, 0, 0, -3230, -866, 0, 0, 0, 0, 0, 0, 0, 3072,
	1024, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -96, -1248, -914, -420, -434, -434, -370, 295, 360, 360, 400, 865, 1221, 407, 0, 0, 0, 0, 0, 0, 0, -3584, -512, 0, 0, 0, 0, 0, 0, 0, 3392,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3968, -128, 0, 0, 0, 0, 0, 0, 0, 3712,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -256, -3840, 0, 0, 0, 0, 0, 0, 0, 0, 4032,
	64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -882, -3214, 0, 0, 0, 0, 0, 0, 0, 317, 3779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2240, -1856, 0, 0, 0, 0, 0, 0, 0, 1280, 2816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3648, -448, 0, 0, 0, 0, 0, 0, 0, 2304, 1792,
	0, 0, 0, 0, 0, 0, 0, -816, -432, 1248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -980, -3116, 0, 0, 0, 0, 0, 0, 0, 0, 3328, 768,
	0, 0, 0, 0, 0, 0, -448, -3264, -320, 2816, 1216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -64, -3264, -768, 0, 0, 0, 0, 0, 0, 0, 340, 3756, 0,
	0, 0, 0, 0, 0, -192, -3200, -704, 0, 64, 2880, 1152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2240, -1856, 0, 0, 0, 0, 0, 0, 0, 0, 2112, 1984, 0,
	0, 0, 0, 0, -64, -2944, -1088, 0, 0, 0, 120, 2432, 1544, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1248, -2848, 0, 0, 0, 0, 0, 0, 0, 0, 256, 3648, 192, 0,
	0, 0, 0, 0, -2496, -1600, 0, 0, 0, 0, 0, 0, 1152, 2560, 384, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2048, -2048, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2112, 1984, 0, 0,
	0, 0, 0, -1544, -2552, 0, 0, 0, 0, 0, 0, 0, 0, 240, 2168, 1472, 216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -589, -2527, -980, 0, 0, 0, 0, 0, 0, 0, 0, 0, 352, 3534, 210, 0, 0,
	0, 0, 0, -256, -3328, -512, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 1240, 1493, 1200, 44, 0, 0, 0, 0, 0, 0, -256, -1408, -1472, -960, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 3136, 896, 0, 0, 0,
	0, 0, 0, 0, -640, -3264, -192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 405, 458, 458, 270, -405, -425, -425, -378, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2496, 1600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -992, -2789, -315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1739, 2357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -448, -2880, -768, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2112, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -132, -2280, -1622, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 320, 2688, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -640, -2176, -1280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1360, 2256, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -984, -1636, -1312, -164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1408, 2048, 640, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -180, -1350, -1412, -926, -228, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 968, 1047, 1424, 560, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -660, -895, -669, -306, -304, -342, 84, 315, 315, 315, 336, 828, 891, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
}
